<?xml version="1.0" encoding="utf-8"?>
<ManagementPack SchemaVersion="2.0" ContentReadable="true" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Manifest>
    <Identity>
      <ID>DiagnosticsAndRecoveries</ID>
      <Version>1.0.0.21</Version>
    </Identity>
    <Name>F12 HR Application</Name>
    <References>
      <Reference Alias="Windows">
        <ID>Microsoft.Windows.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Health">
        <ID>System.Health.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="System">
        <ID>System.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
    </References>
  </Manifest>
  <TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="F12.HR.AppServer" Base="Windows!Microsoft.Windows.ComputerRole" Accessibility="Public" Abstract="false" Hosted="true" Singleton="false">
          <Property ID="Version" Key="false" Type="string" />
        </ClassType>
      </ClassTypes>
    </EntityTypes>
  </TypeDefinitions>
  <Monitoring>
    <Discoveries>
      <Discovery ID="F12.HR.AppServer.Discovery" Target="Windows!Microsoft.Windows.Server.OperatingSystem" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="F12.HR.AppServer" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.FilteredRegistryDiscoveryProvider">
          <ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName>
          <RegistryAttributeDefinitions>
            <RegistryAttributeDefinition>
              <!-- 
PathType - Integer
  Specifies whether the path is a key or a value.
  • 0—Specifies that the path is to a key, for which the existence of the key should be checked.
  • 1—Specifies that the path is to a value that should be retrieved.

AttributeType -   Integer
  The data type of the value to return:
  • 0—Boolean
  • 1—String
  • 2—Integer
  • 3—Float
Values 1, 2, and 3 are used only when the PathType is set to 1.
-->
              <AttributeName>SeedExists</AttributeName>
              <Path>SOFTWARE\SCOMDiscoveryData\HR</Path>
              <PathType>0</PathType>
              <AttributeType>0</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>Version</AttributeName>
              <Path>SOFTWARE\SCOMDiscoveryData\HR\Version</Path>
              <PathType>1</PathType>
              <AttributeType>1</AttributeType>
            </RegistryAttributeDefinition>
          </RegistryAttributeDefinitions>
          <Frequency>3600</Frequency>
          <ClassId>$MPElement[Name="F12.HR.AppServer"]$</ClassId>
          <InstanceSettings>
            <Settings>
              <Setting>
                <Name>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Name>
                <Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="System!System.Entity"]/DisplayName$</Name>
                <Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="F12.HR.AppServer"]/Version$</Name>
                <Value>$Data/Values/Version$</Value>
              </Setting>
            </Settings>
          </InstanceSettings>
          <Expression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="String">Values/SeedExists</XPathQuery>
              </ValueExpression>
              <Operator>Equal</Operator>
              <ValueExpression>
                <Value Type="String">True</Value>
              </ValueExpression>
            </SimpleExpression>
          </Expression>
        </DataSource>
      </Discovery>
    </Discoveries>
    <Monitors>
      <UnitMonitor ID="F12.HR.Monitor.NTEvent.2State.380" Accessibility="Public" Enabled="true" Target="F12.HR.AppServer" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.2SingleEventLog2StateMonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="F12.HR.Monitor.NTEvent.2State.380.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/EventDescription$</AlertParameter1>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="FirstEventRaised" MonitorTypeStateID="FirstEventRaised" HealthState="Error" />
          <OperationalState ID="SecondEventRaised" MonitorTypeStateID="SecondEventRaised" HealthState="Success" />
        </OperationalStates>
        <Configuration>
          <FirstComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</FirstComputerName>
          <FirstLogName>Application</FirstLogName>
          <FirstExpression>
            <And>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">PublisherName</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">EventCreate</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Integer">EventLevel</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="Integer">1</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="UnsignedInteger">380</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </And>
          </FirstExpression>
          <SecondComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</SecondComputerName>
          <SecondLogName>Application</SecondLogName>
          <SecondExpression>
            <And>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="UnsignedInteger">381</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">PublisherName</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">EventCreate</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Integer">EventLevel</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="Integer">1</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </And>
          </SecondExpression>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="F12.HR.Monitor.NTEvent.2State.880" Accessibility="Public" Enabled="true" Target="F12.HR.AppServer" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.2SingleEventLog2StateMonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="F12.HR.Monitor.NTEvent.2State.880.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/EventDescription$</AlertParameter1>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="FirstEventRaised" MonitorTypeStateID="FirstEventRaised" HealthState="Error" />
          <OperationalState ID="SecondEventRaised" MonitorTypeStateID="SecondEventRaised" HealthState="Success" />
        </OperationalStates>
        <Configuration>
          <FirstComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</FirstComputerName>
          <FirstLogName>Application</FirstLogName>
          <FirstExpression>
            <And>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">PublisherName</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">EventCreate</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Integer">EventLevel</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="Integer">1</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="UnsignedInteger">880</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </And>
          </FirstExpression>
          <SecondComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</SecondComputerName>
          <SecondLogName>Application</SecondLogName>
          <SecondExpression>
            <And>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="UnsignedInteger">881</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">PublisherName</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">EventCreate</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Integer">EventLevel</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="Integer">1</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </And>
          </SecondExpression>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="F12.HR.Monitor.NTEvent.2State.980" Accessibility="Public" Enabled="true" Target="F12.HR.AppServer" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.2SingleEventLog2StateMonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="F12.HR.Monitor.NTEvent.2State.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/EventDescription$</AlertParameter1>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="FirstEventRaised" MonitorTypeStateID="FirstEventRaised" HealthState="Error" />
          <OperationalState ID="SecondEventRaised" MonitorTypeStateID="SecondEventRaised" HealthState="Success" />
        </OperationalStates>
        <Configuration>
          <FirstComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</FirstComputerName>
          <FirstLogName>Application</FirstLogName>
          <FirstExpression>
            <And>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">PublisherName</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">EventCreate</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Integer">EventLevel</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="Integer">1</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="UnsignedInteger">980</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </And>
          </FirstExpression>
          <SecondComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</SecondComputerName>
          <SecondLogName>Application</SecondLogName>
          <SecondExpression>
            <And>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="UnsignedInteger">981</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">PublisherName</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">EventCreate</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Integer">EventLevel</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="Integer">1</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </And>
          </SecondExpression>
        </Configuration>
      </UnitMonitor>
    </Monitors>
    <Diagnostics>
      <Diagnostic ID="F12.HR.Diagnostic.ReadRegistry" Target="F12.HR.AppServer" Accessibility="Public" Enabled="true" Monitor="F12.HR.Monitor.NTEvent.2State.380" ExecuteOnState="Error" Remotable="true" Timeout="300">
        <Category>Maintenance</Category>
        <ProbeAction ID="PA" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagProbe">
          <ScriptName>DiagnosticReadReg.ps1</ScriptName>
          <ScriptBody><![CDATA[$Version = Get-ItemProperty "hklm:\SOFTWARE\SCOMDiscoveryData\Diagnostic" -Name Version | Select -ExpandProperty Version 


$api = New-Object -ComObject 'MOM.ScriptAPI'
$api.LogScriptEvent('DiagnotsicReadReg.ps1',101,4,$Version)

$bag=$api.createpropertybag()
$bag.AddValue('Version',$Version)
$bag]]></ScriptBody>
          <TimeoutSeconds>300</TimeoutSeconds>
        </ProbeAction>
      </Diagnostic>
      <Diagnostic ID="F12.HR.Diagnostic.CmdExec.TaskList" Target="F12.HR.AppServer" Accessibility="Public" Enabled="true" Monitor="F12.HR.Monitor.NTEvent.2State.880" ExecuteOnState="Error" Remotable="true" Timeout="300">
        <Category>Maintenance</Category>
        <ProbeAction ID="Command" TypeID="System!System.CommandExecuterProbe">
          <ApplicationName>%windir%\system32\tasklist.exe</ApplicationName>
          <WorkingDirectory />
          <CommandLine />
          <TimeoutSeconds>15</TimeoutSeconds>
          <RequireOutput>true</RequireOutput>
        </ProbeAction>
      </Diagnostic>
      <Diagnostic ID="F12.HR.AppServer.Diagnostic.PowerShell" Target="F12.HR.AppServer" Accessibility="Public" Enabled="true" Monitor="F12.HR.Monitor.NTEvent.2State.980" ExecuteOnState="Error" Remotable="true" Timeout="300">
        <Category>Maintenance</Category>
        <!-- Please fill in the type of the probe action module.
             Without a ConditionDetection, the ProbeAction always executes.
             The output of the probe action will be shown in the 
             Health Explorer detail pane. -->
        <ProbeAction ID="PA" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagProbe">
          <ScriptName>DiagnosticPowerShell.ps1</ScriptName>
          <ScriptBody><![CDATA[if ([System.Diagnostics.EventLog]::SourceExists("Diagnostic PowerShell") -eq $False) {
    New-EventLog -LogName "Visual Studio Builds" -Source "Diagnostic PowerShell"
	}

Write-EventLog -LogName Application -Source "Diagnostic PowerShell" -EntryType Information -EventID 1234 -Message "Diagnostic Has Completed"]]></ScriptBody>
          <TimeoutSeconds>300</TimeoutSeconds>
        </ProbeAction>
      </Diagnostic>
    </Diagnostics>
    <Recoveries>
      <Recovery ID="F12.HR.RecoveryInResponseToDiagnostic" Target="F12.HR.AppServer" Monitor="F12.HR.Monitor.NTEvent.2State.380" Accessibility="Public" Enabled="true" ExecuteOnDiagnostic="F12.HR.Diagnostic.ReadRegistry" Remotable="true" ResetMonitor="false" Timeout="300">
        <Category>Maintenance</Category>
        <!-- Please fill in the type of the condition detection module 
             or remove the ConditionDetection section. This can be used to
             inspect the Monitor State, Data Item that caused the State Change,
             or the Diagnostic ProbeAction Output (if the ExecuteOnDiagnostic
             attribute is present). If this Condition Detection does not "pass"
             the WriteAction will not be executed. -->
        <ConditionDetection ID="CD" TypeID="System!System.ExpressionFilter">
          <Expression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="String">Diagnostic/DataItem/Property[@Name='Version']</XPathQuery>
              </ValueExpression>
              <Operator>Equal</Operator>
              <ValueExpression>
                <Value Type="String">1.2.3</Value>
              </ValueExpression>
            </SimpleExpression>
          </Expression>
        </ConditionDetection>
        <!-- Please fill in the type of the write action module.
             Without a ConditionDetection, the WriteAction always executes.
             The output of the write action will be shown in the 
             Health Explorer detail pane. -->
        <WriteAction ID="WA" TypeID="Windows!Microsoft.Windows.PowerShellWriteAction">
          <ScriptName>RecoveryWriteLog.ps1</ScriptName>
          <ScriptBody><![CDATA[Param (
$Version
)

If ([System.Diagnostics.EventLog]::SourceExists("Diagnostic and Recovery PowerShell") -eq $False) {
New-EventLog -LogName Application -Source "Diagnostic and Recovery PowerShell"
}

$Msg = 
"Recovery in response to Diagnostic Has Completed - Version = $Version" 
Write-EventLog -LogName Application -Source "Diagnostic and Recovery PowerShell" -EntryType Information -EventID 2345 -Message $Msg ]]></ScriptBody>
          <Parameters>
            <Parameter>
              <Name>Version</Name>
              <Value>$Data/Diagnostic/DataItem/Property[@Name='Version']$</Value>
            </Parameter>
          </Parameters>
          <TimeoutSeconds>300</TimeoutSeconds>
        </WriteAction>
      </Recovery>
    </Recoveries>
  </Monitoring>
  <Presentation>
    <StringResources>
      <StringResource ID="F12.HR.Monitor.NTEvent.2State.380.AlertMessage" />
      <StringResource ID="F12.HR.Monitor.NTEvent.2State.880.AlertMessage" />
      <StringResource ID="F12.HR.Monitor.NTEvent.2State.AlertMessage" />
    </StringResources>
  </Presentation>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="F12.HR.AppServer">
          <Name>F12 HR Application Server</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="F12.HR.AppServer" SubElementID="Version">
          <Name>Version</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="F12.HR.AppServer.Discovery">
          <Name>Discover F12 HR Application Server</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="DiagnosticsAndRecoveries">
          <Name>F12 HR Application Management Pack</Name>
          <Description>Management Pack Examples for Diagnostics and Recoveries</Description>
        </DisplayString>
        <DisplayString ElementID="F12.HR.Monitor.NTEvent.2State.380.AlertMessage">
          <Name>Alert Name - Single Event Log Timer 2 State Monitor</Name>
          <Description>{0}</Description>
        </DisplayString>
        <DisplayString ElementID="F12.HR.Monitor.NTEvent.2State.380" SubElementID="FirstEventRaised">
          <Name>FirstEventRaised</Name>
          <Description>FirstEventRaised</Description>
        </DisplayString>
        <DisplayString ElementID="F12.HR.Monitor.NTEvent.2State.380" SubElementID="SecondEventRaised">
          <Name>SecondEventRaised</Name>
          <Description>SecondEventRaised</Description>
        </DisplayString>
        <DisplayString ElementID="F12.HR.Monitor.NTEvent.2State.380">
          <Name>Monitor for Event 380</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="F12.HR.Diagnostic.ReadRegistry">
          <Name>Diagnostic Diagnostic</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="F12.HR.RecoveryInResponseToDiagnostic">
          <Name>Recovery In Response To Diagnostic</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="F12.HR.Monitor.NTEvent.2State.880.AlertMessage">
          <Name>Alert Name - Single Event Log Timer 2 State Monitor</Name>
          <Description>{0}</Description>
        </DisplayString>
        <DisplayString ElementID="F12.HR.Monitor.NTEvent.2State.880" SubElementID="FirstEventRaised">
          <Name>FirstEventRaised</Name>
          <Description>FirstEventRaised</Description>
        </DisplayString>
        <DisplayString ElementID="F12.HR.Monitor.NTEvent.2State.880" SubElementID="SecondEventRaised">
          <Name>SecondEventRaised</Name>
          <Description>SecondEventRaised</Description>
        </DisplayString>
        <DisplayString ElementID="F12.HR.Monitor.NTEvent.2State.880">
          <Name>Monitor for Event 880</Name>
          <Description>SecondEventRaised</Description>
        </DisplayString>
        <DisplayString ElementID="F12.HR.Diagnostic.CmdExec.TaskList">
          <Name>Task List</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="F12.HR.Monitor.NTEvent.2State.AlertMessage">
          <Name>Alert Name - Single Event Log Timer 2 State Monitor</Name>
          <Description>{0}</Description>
        </DisplayString>
        <DisplayString ElementID="F12.HR.Monitor.NTEvent.2State.980" SubElementID="FirstEventRaised">
          <Name>FirstEventRaised</Name>
          <Description>FirstEventRaised</Description>
        </DisplayString>
        <DisplayString ElementID="F12.HR.Monitor.NTEvent.2State.980" SubElementID="SecondEventRaised">
          <Name>SecondEventRaised</Name>
          <Description>SecondEventRaised</Description>
        </DisplayString>
        <DisplayString ElementID="F12.HR.Monitor.NTEvent.2State.980">
          <Name>Monitor for Event 980</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="F12.HR.AppServer.Diagnostic.PowerShell">
          <Name>Run PowerShell Script</Name>
          <Description></Description>
        </DisplayString>
      </DisplayStrings>
      <KnowledgeArticles></KnowledgeArticles>
    </LanguagePack>
  </LanguagePacks>
</ManagementPack>